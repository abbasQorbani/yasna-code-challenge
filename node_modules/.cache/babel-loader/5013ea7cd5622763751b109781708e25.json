{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/abbasQorbani/Documents/yasna-code-challenge/src/make-counter/make-counter.tsx\";\nimport React from 'react';\nimport './make-counter.scss';\n\nclass MakeCounter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.stepInputValue = void 0;\n    this.errorMessage = void 0;\n    this.stepInputValue = 0;\n    this.errorMessage = 'This only accepts numbers like 1, 2, -5, 3.8, 310';\n    this.steps = [{\n      index: 0,\n      step: 0\n    }, {\n      index: 1,\n      step: 1\n    }];\n  }\n\n  checkUserInput(event) {\n    const validate = /^[+-]?\\d+(\\.\\d+)?$/;\n\n    if (validate.exec(event)) {\n      this.stepInputValue = Number(event);\n      return;\n    } else {\n      console.log(event);\n    }\n  }\n\n  makeCounter() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"make-counter-parent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"make-counter-parent__counter-maker-holder\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"make-counter-parent__steps-input\",\n          type: \"text\",\n          placeholder: \"enter steps value ...\",\n          onChange: e => this.checkUserInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"make-counter-parent__maker-button\",\n          onClick: e => this.makeCounter(),\n          children: \"Add counter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"make-counter-parent__error-message\",\n        children: this.errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default MakeCounter;","map":{"version":3,"sources":["/home/abbasQorbani/Documents/yasna-code-challenge/src/make-counter/make-counter.tsx"],"names":["React","MakeCounter","Component","constructor","props","stepInputValue","errorMessage","steps","index","step","checkUserInput","event","validate","exec","Number","console","log","makeCounter","render","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,qBAAP;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AAGtCC,EAAAA,WAAW,CACHC,KADG,EAEL;AACF,UAAMA,KAAN;AADE,SAJNC,cAIM;AAAA,SAHNC,YAGM;AAEF,SAAKD,cAAL,GAAsB,CAAtB;AACA,SAAKC,YAAL,GAAoB,mDAApB;AACA,SAAKC,KAAL,GAAa,CACT;AACIC,MAAAA,KAAK,EAAE,CADX;AAEIC,MAAAA,IAAI,EAAE;AAFV,KADS,EAKT;AACID,MAAAA,KAAK,EAAE,CADX;AAEIC,MAAAA,IAAI,EAAE;AAFV,KALS,CAAb;AAUH;;AACDC,EAAAA,cAAc,CAACC,KAAD,EAAgB;AAC1B,UAAMC,QAAgB,GAAG,oBAAzB;;AACA,QAAIA,QAAQ,CAACC,IAAT,CAAcF,KAAd,CAAJ,EAA0B;AACtB,WAAKN,cAAL,GAAsBS,MAAM,CAACH,KAAD,CAA5B;AACA;AACH,KAHD,MAGO;AACHI,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACH;AACJ;;AAEDM,EAAAA,WAAW,GAAG,CACb;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACQ;AAAS,MAAA,SAAS,EAAC,qBAAnB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,2CAAf;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,kCAAjB;AAAoD,UAAA,IAAI,EAAC,MAAzD;AACI,UAAA,WAAW,EAAC,uBADhB;AAEI,UAAA,QAAQ,EAAGC,CAAD,IAAO,KAAKT,cAAL,CAAoBS,CAAC,CAACC,MAAF,CAASC,KAA7B;AAFrB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAQ,UAAA,SAAS,EAAC,mCAAlB;AAAsD,UAAA,OAAO,EAAGF,CAAD,IAAO,KAAKF,WAAL,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,oCAAf;AAAA,kBACK,KAAKX;AADV;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADR;AAaH;;AA/CqC;;AAqD1C,eAAeL,WAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './make-counter.scss';\n\nclass MakeCounter extends React.Component {\n    stepInputValue: number;\n    errorMessage: string;\n    constructor(\n            props: {} | Readonly<{}>\n        ) {\n        super(props);\n        this.stepInputValue = 0;\n        this.errorMessage = 'This only accepts numbers like 1, 2, -5, 3.8, 310';\n        this.steps = [\n            {\n                index: 0,\n                step: 0\n            },\n            {\n                index: 1,\n                step: 1\n            },\n        ]\n    };\n    checkUserInput(event: string) {\n        const validate: RegExp = /^[+-]?\\d+(\\.\\d+)?$/;\n        if (validate.exec(event)) {\n            this.stepInputValue = Number(event);\n            return;\n        } else {\n            console.log(event);\n        }\n    };\n\n    makeCounter() {\n    }\n\n    render() {\n        return (\n                <section className=\"make-counter-parent\">\n                    <div className=\"make-counter-parent__counter-maker-holder\">\n                        <input className=\"make-counter-parent__steps-input\" type=\"text\"\n                            placeholder=\"enter steps value ...\"\n                            onChange={(e) => this.checkUserInput(e.target.value)} />\n                        <button className=\"make-counter-parent__maker-button\" onClick={(e) => this.makeCounter()}>Add counter</button>\n                    </div>\n                    <div className=\"make-counter-parent__error-message\">\n                        {this.errorMessage}\n                    </div>\n                </section>\n        )\n    }\n}\n\n\n\n\nexport default MakeCounter;"]},"metadata":{},"sourceType":"module"}