{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/abbasQorbani/Documents/yasna-code-challenge/src/make-counter/make-counter.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Counter from '../counter/counter';\nimport './make-counter.scss';\n\nclass MakeCounter extends React.Component {\n  constructor(props, counter) {\n    super(props);\n    this.counter = counter;\n    this.stepInputValue = void 0;\n    this.errorMessage = void 0;\n    this.stepInputValue = 0;\n    this.errorMessage = 'This only accepts numbers like 1, 2, -5, 3.8, 310';\n  }\n\n  checkUserInput(event) {\n    const validate = /^[+-]?\\d+(\\.\\d+)?$/;\n\n    if (validate.exec(event)) {\n      this.stepInputValue = Number(event);\n      return;\n    } else {\n      console.log(event);\n    }\n  }\n\n  makeCounter() {\n    this.counter = new Counter(1);\n    ReactDOM.render([/*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 26\n    }, this)], document.getElementById('counter'));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"make-counter-parent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"make-counter-parent__counter-maker-holder\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"make-counter-parent__steps-input\",\n            type: \"text\",\n            placeholder: \"enter steps value ...\",\n            onChange: e => this.checkUserInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"make-counter-parent__maker-button\",\n            onClick: e => this.makeCounter(),\n            children: \"Add counter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"make-counter-parent__error-message\",\n          children: this.errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"counter-parent\",\n        children: this.steps.map((index, step) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"counter-parent__counter\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"counter-parent__counter-header\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"step \", index]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"counter-parent__count\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: step\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"counter-parent__run-button-holder\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"counter-parent__run-button\",\n                children: \"Run\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default MakeCounter;","map":{"version":3,"sources":["/home/abbasQorbani/Documents/yasna-code-challenge/src/make-counter/make-counter.tsx"],"names":["React","ReactDOM","Counter","MakeCounter","Component","constructor","props","counter","stepInputValue","errorMessage","checkUserInput","event","validate","exec","Number","console","log","makeCounter","render","document","getElementById","e","target","value","steps","map","index","step"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAO,qBAAP;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AAGtCC,EAAAA,WAAW,CACHC,KADG,EAEKC,OAFL,EAGL;AACF,UAAMD,KAAN;AADE,SADUC,OACV,GADUA,OACV;AAAA,SALNC,cAKM;AAAA,SAJNC,YAIM;AAEF,SAAKD,cAAL,GAAsB,CAAtB;AACA,SAAKC,YAAL,GAAoB,mDAApB;AACH;;AACDC,EAAAA,cAAc,CAACC,KAAD,EAAgB;AAC1B,UAAMC,QAAgB,GAAG,oBAAzB;;AACA,QAAIA,QAAQ,CAACC,IAAT,CAAcF,KAAd,CAAJ,EAA0B;AACtB,WAAKH,cAAL,GAAsBM,MAAM,CAACH,KAAD,CAA5B;AACA;AACH,KAHD,MAGO;AACHI,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACH;AACJ;;AAEDM,EAAAA,WAAW,GAAG;AACV,SAAKV,OAAL,GAAe,IAAIL,OAAJ,CAAY,CAAZ,CAAf;AACAD,IAAAA,QAAQ,CAACiB,MAAT,CAAgB,cAAC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAD,CAAhB,EAA+BC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAA/B;AACH;;AAEDF,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAS,QAAA,SAAS,EAAC,qBAAnB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,2CAAf;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,kCAAjB;AAAoD,YAAA,IAAI,EAAC,MAAzD;AACI,YAAA,WAAW,EAAC,uBADhB;AAEI,YAAA,QAAQ,EAAGG,CAAD,IAAO,KAAKX,cAAL,CAAoBW,CAAC,CAACC,MAAF,CAASC,KAA7B;AAFrB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAQ,YAAA,SAAS,EAAC,mCAAlB;AAAsD,YAAA,OAAO,EAAGF,CAAD,IAAO,KAAKJ,WAAL,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAK,UAAA,SAAS,EAAC,oCAAf;AAAA,oBACK,KAAKR;AADV;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAS,QAAA,SAAS,EAAC,gBAAnB;AAAA,kBACK,KAAKe,KAAL,CAAWC,GAAX,CAAe,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC7B,8BACI;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,gCAAf;AAAA,qCACI;AAAA,oCAAYD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAK,cAAA,SAAS,EAAC,uBAAf;AAAA,qCACI;AAAA,0BAAKC;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAOI;AAAK,cAAA,SAAS,EAAC,mCAAf;AAAA,qCACI;AAAQ,gBAAA,SAAS,EAAC,4BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAaH,SAdA;AADL;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA,oBADJ;AAgCH;;AA3DqC;;AAiE1C,eAAexB,WAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Counter from '../counter/counter';\nimport './make-counter.scss';\n\nclass MakeCounter extends React.Component {\n    stepInputValue: number;\n    errorMessage: string;\n    constructor(\n            props: {} | Readonly<{}>,\n            private counter: Counter\n        ) {\n        super(props);\n        this.stepInputValue = 0;\n        this.errorMessage = 'This only accepts numbers like 1, 2, -5, 3.8, 310';\n    };\n    checkUserInput(event: string) {\n        const validate: RegExp = /^[+-]?\\d+(\\.\\d+)?$/;\n        if (validate.exec(event)) {\n            this.stepInputValue = Number(event);\n            return;\n        } else {\n            console.log(event);\n        }\n    };\n\n    makeCounter() {\n        this.counter = new Counter(1);\n        ReactDOM.render([<Counter />], document.getElementById('counter'));\n    }\n\n    render() {\n        return (\n            <>\n                <section className=\"make-counter-parent\">\n                    <div className=\"make-counter-parent__counter-maker-holder\">\n                        <input className=\"make-counter-parent__steps-input\" type=\"text\"\n                            placeholder=\"enter steps value ...\"\n                            onChange={(e) => this.checkUserInput(e.target.value)} />\n                        <button className=\"make-counter-parent__maker-button\" onClick={(e) => this.makeCounter()}>Add counter</button>\n                    </div>\n                    <div className=\"make-counter-parent__error-message\">\n                        {this.errorMessage}\n                    </div>\n                </section>\n                <section className=\"counter-parent\">\n                    {this.steps.map((index, step) => {\n                        return (\n                            <div className=\"counter-parent__counter\">\n                                <div className=\"counter-parent__counter-header\">\n                                    <span>step {index}</span>\n                                </div>\n                                <div className=\"counter-parent__count\">\n                                    <h3>{step}</h3>\n                                </div>\n                                <div className=\"counter-parent__run-button-holder\">\n                                    <button className=\"counter-parent__run-button\">Run</button>\n                                </div>\n                            </div>\n                        );\n                    })}\n                </section>\n            </>\n        )\n    }\n}\n\n\n\n\nexport default MakeCounter;"]},"metadata":{},"sourceType":"module"}